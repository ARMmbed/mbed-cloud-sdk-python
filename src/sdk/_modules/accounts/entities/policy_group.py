"""
Entity module

This file is autogenerated from api specifications
"""

# Python 2 compatibility
from __future__ import unicode_literals
from builtins import str  # noqa
from builtins import super

from mbed_cloud.sdk.common.entity import Entity
from mbed_cloud.sdk.common import fields
from mbed_cloud.sdk import enums


class PolicyGroup(Entity):
    """Represents the `PolicyGroup` entity in Mbed Cloud"""

    # all fields available on this entity
    _fieldnames = [
        "account_id",
        "apikey_count",
        "created_at",
        "id",
        "name",
        "updated_at",
        "user_count",
    ]

    # common renames used when mapping {<API spec>: <SDK>}
    _renames = {}

    def __init__(
        self,
        _client=None,
        account_id=None,
        apikey_count=None,
        created_at=None,
        id=None,
        name=None,
        updated_at=None,
        user_count=None,
    ):
        """Creates a local `PolicyGroup` instance

        :param account_id: The UUID of the account this group belongs to.
        :type account_id: str
        :param apikey_count: The number of API keys in this group.
        :type apikey_count: int
        :param created_at: Creation UTC time RFC3339.
        :type created_at: datetime
        :param id: The UUID of the group.
        :type id: str
        :param name: The name of the group.
        :type name: str
        :param updated_at: Last update UTC time RFC3339.
        :type updated_at: datetime
        :param user_count: The number of users in this group.
        :type user_count: int
        """

        super().__init__(_client=_client)

        # inline imports for avoiding circular references and bulk imports

        # fields
        self._account_id = fields.StringField(value=account_id)
        self._apikey_count = fields.IntegerField(value=apikey_count)
        self._created_at = fields.DateTimeField(value=created_at)
        self._id = fields.StringField(value=id)
        self._name = fields.StringField(value=name)
        self._updated_at = fields.DateTimeField(value=updated_at)
        self._user_count = fields.IntegerField(value=user_count)

    @property
    def account_id(self):
        """The UUID of the account this group belongs to.
        
        api example: '01619571e2e90242ac12000600000000'
        
        :rtype: str
        """
        return self._account_id.value

    @account_id.setter
    def account_id(self, value):
        """Set value of `account_id`

        :param value: value to set
        :type value: str
        """
        self._account_id.set(value)

    @property
    def apikey_count(self):
        """The number of API keys in this group.
        
        :rtype: int
        """
        return self._apikey_count.value

    @apikey_count.setter
    def apikey_count(self, value):
        """Set value of `apikey_count`

        :param value: value to set
        :type value: int
        """
        self._apikey_count.set(value)

    @property
    def created_at(self):
        """Creation UTC time RFC3339.
        
        api example: '2018-02-13T09:35:20Z'
        
        :rtype: datetime
        """
        return self._created_at.value

    @created_at.setter
    def created_at(self, value):
        """Set value of `created_at`

        :param value: value to set
        :type value: datetime
        """
        self._created_at.set(value)

    @property
    def id(self):
        """The UUID of the group.
        
        api example: '01619571dec00242ac12000600000000'
        
        :rtype: str
        """
        return self._id.value

    @id.setter
    def id(self, value):
        """Set value of `id`

        :param value: value to set
        :type value: str
        """
        self._id.set(value)

    @property
    def name(self):
        """The name of the group.
        
        api example: 'Administrators'
        
        :rtype: str
        """
        return self._name.value

    @name.setter
    def name(self, value):
        """Set value of `name`

        :param value: value to set
        :type value: str
        """
        self._name.set(value)

    @property
    def updated_at(self):
        """Last update UTC time RFC3339.
        
        api example: '2018-02-14T15:24:14Z'
        
        :rtype: datetime
        """
        return self._updated_at.value

    @updated_at.setter
    def updated_at(self, value):
        """Set value of `updated_at`

        :param value: value to set
        :type value: datetime
        """
        self._updated_at.set(value)

    @property
    def user_count(self):
        """The number of users in this group.
        
        api example: 1
        
        :rtype: int
        """
        return self._user_count.value

    @user_count.setter
    def user_count(self, value):
        """Set value of `user_count`

        :param value: value to set
        :type value: int
        """
        self._user_count.set(value)
